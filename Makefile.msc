########################################################################
# This program is Copyright (C) 1986-1994 by Jonathan Payne.  JOVE is  #
# provided to you without charge, and with no warranty.  You may give  #
# away copies of JOVE, including sources, provided that this notice is #
# included in all the files.                                           #
########################################################################

# Makefile for Microsoft C version 8.0 (Visual C)
# should also work with earlier versions
#
# - supported targets:
#   + jjove.exe (build JOVE, but don't install it)
#   + jovedosx.zoo (build executable JOVE kit)
#   + jovedosx.zip (build executable JOVE kit)
#   + clean
#
# - to install, do the following:
#   + copy jjove.exe where you wish
#   + copy doc/cmds.doc to <SHAREDIR>/cmds.doc
#   + optional: copy some jove rc (none supplied) file to <SHAREDIR>/jove.rc

# Options (specify on MAKE command line with -D)
# DEBUG=1 : enable debugging, disable optimizations
# ARCH=0|2|3 : compile for 086/286/386 (-G option). Still 16-bit though.

!IF "$(ARCH)" == ""
ARCH	=	0		# Default to 8086
!ENDIF

MEM = L				# M for medium or L for large

!if "$(DEBUG)" != ""
DEB = -Gs -Od -Zi -DDEBUG
DEBLDFLAGS=/CO/F/B
!else
DEB = -Ox -D_NDEBUG
DEBLDFLAGS=
!endif

# Define WINNT on make if building for Win32
!IF "$(WINNT)" != ""
SYSCFLAGS = -Zp
SYSLDFLAGS	=
!ELSE
SYSCFLAGS = -A$(MEM) -J -Zp -G$(ARCH)
SYSLDFLAGS	=
!ENDIF
CFLAGS = $(SYSCFLAGS) -nologo -DIBMPC $(DEB)

#
# linker flags: for debugging use /NOE/NOI/F/B/PAC/CO/STACK:0x2000
#

LDFLAGS = $(SYSLDFLAGS)$(DEBLDFLAGS)/PACKC/NOE/NOI/MAP/E/STACK:0x2000
#
# set VPATH as below if you have sources in SRC
#
SRC = .
# VPATH = .;..	# should read .;$(SRC) - but doesn't work

TMPDIR = c:/tmp
RECDIR = c:/tmp
LIBDIR = c:/jove
SHAREDIR = $(LIBDIR)
# BINDIR = c:/jove
DFLTSHELL = command

OBJECTS = keys.obj commands.obj abbrev.obj ask.obj buf.obj c.obj \
	case.obj jctype.obj delete.obj extend.obj argcount.obj \
	insert.obj io.obj jove.obj macros.obj marks.obj misc.obj mouse.obj move.obj \
	paragraph.obj proc.obj re.obj reapp.obj scandir.obj \
	list.obj keymaps.obj util.obj vars.obj wind.obj \
	fmt.obj disp.obj term.obj fp.obj screen.obj msgetch.obj \
	pcscr.obj

HEADERS = abbrev.h argcount.h ask.h buf.h c.h case.h chars.h commands.h \
	jctype.h dataobj.h delete.h disp.h extend.h externs.h \
	fmt.h fp.h msgetch.h insert.h io.h iproc.h jove.h \
	keymaps.h list.h mac.h macros.h marks.h \
	misc.h mouse.h move.h paragraph.h pcscr.h proc.h \
	re.h reapp.h rec.h scandir.h screen.h \
	sysdep.h sysprocs.h temp.h term.h termcap.h ttystate.h \
	tune.h util.h vars.h version.h wind.h

jjove.exe:	$(OBJECTS) $(HEADERS)
	link  @<<jove.lnk $(LDFLAGS)
$(OBJECTS: = +^
) +
setargv.obj
jjove.exe


<<KEEP

jove.obj:	paths.h
vars.obj:	vars.tab
commands.obj:	commands.tab
setmaps.obj:	vars.tab commands.tab

jovedosx.zoo:	paths.h jjove.exe
	-del jovedosx.zoo
	-del jove.exe
	rename jjove.exe jove.exe
	zoo -add jovedosx.zoo jove.exe doc\cmds.doc doc\jove.man doc\jove.doc paths.h README.dos

jovedosx.zip:	paths.h jjove.exe
	-del jovedosx.zip
	-del jove.exe
	rename jjove.exe jove.exe
	pkzip -aP jovedosx.zip jove.exe doc\cmds.doc doc\jove.man doc\jove.doc paths.h README.dos

paths.h: makefile.msc
	@echo Making <<paths.h
/* Changes should be made in Makefile, not to this file! */

#define TMPDIR "$(TMPDIR)"
#define RECDIR "$(RECDIR)"
#define LIBDIR "$(LIBDIR)"
#define SHAREDIR "$(SHAREDIR)"
#define DFLTSHELL "$(DFLTSHELL)"
<<KEEP


pcscr.obj:	pcscr.c jove.h
	$(CC) $(CFLAGS) -I$(SRC) -NTscreen_text -c pcscr.c

$(OBJECTS): $(HEADERS)

setmaps.exe:	setmaps.obj
	cl /F 6000 setmaps.obj

setmaps.obj:	commands.tab vars.tab keys.txt setmaps.c

keys.c:	setmaps.exe keys.txt
	setmaps < keys.txt > keys.c

keys.obj:	keys.c jove.h
	$(CC) $(CFLAGS) -I$(SRC) -c keys.c

clean:
	-rm *.obj setmaps.exe keys.c *.bak *.map jove.lnk
